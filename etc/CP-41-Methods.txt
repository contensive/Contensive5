Imports System.Runtime.InteropServices
'====================================================================================================
' Convensions:
'https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/capitalization-conventions
'   - camelCase arguemnts and properties
'   - PascalCase everything else
Namespace Contensive.BaseClasses
    '
    '====================================================================================================
    ''' <summary>
    ''' CP - The object passed to an addon in the add-ons execute method. See the AddonBaseClass for details of the addon execute method.
    ''' </summary>
    ''' <remarks></remarks>
    Public MustInherit Class CPBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' Factory for new Block object. See CPBlockBaseClass for Block Details
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function BlockNew() As CPBlockBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' Factory for new CS object. See CPCSBaseClass for CS object details 
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function CSNew() As CPCSBaseClass 'Implements BaseClasses.CPBaseClass.CSNew
        '
        '====================================================================================================
        ''' <summary>
        ''' Contensive version
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Version() As String 'Implements BaseClasses.CPBaseClass.Version
        '
        '====================================================================================================
        ''' <summary>
        ''' The Group Object accesses group features. Group Features generally associate people and roles. See CPGroupBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Group() As CPGroupBaseClass 'Implements BaseClasses.CPBaseClass.Group
        '
        '====================================================================================================
        ''' <summary>
        ''' The Request object handles data associated with the request from the visitor. See CPRequestBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Request() As CPRequestBaseClass 'Implements BaseClasses.CPBaseClass.Request
        '
        '====================================================================================================
        ''' <summary>
        ''' The Response object handles the stream of data back to the visitor. See CPResponseBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Response() As CPResponseBaseClass 'Implements BaseClasses.CPBaseClass.Response
        '
        '====================================================================================================
        ''' <summary>
        ''' The UserError Class handles error handling for those conditions you want the user to know about or correct. For example an login error. See the CPUserErrorBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property UserError() As CPUserErrorBaseClass 'Implements BaseClasses.CPBaseClass.UserError
        '
        '====================================================================================================
        ''' <summary>
        ''' The Visit Class handles details related to the visit. For instance it holds the number of pages hit so far and has methods for adding and modifying user defined visit properties. See CPVisitBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Visit() As CPVisitBaseClass 'Implements BaseClasses.CPBaseClass.Visit
        '
        '====================================================================================================
        ''' <summary>
        ''' The Visitor Class handles details related to the visitor. For instance it holds the browser type used by the visitor. See CPVisitorBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Visitor() As CPVisitorBaseClass 'Implements BaseClasses.CPBaseClass.Visitor
        '
        '====================================================================================================
        ''' <summary>
        ''' The User Class handles details related to the user and its related people record. See CPUserBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property User() As CPUserBaseClass 'Implements BaseClasses.CPBaseClass.User
        '
        '====================================================================================================
        ''' <summary>
        ''' The HTML class handles functions used to read and produce HTML elements. See CPHtmlBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Html() As CPHtmlBaseClass 'Implements BaseClasses.CPBaseClass.Html
        '
        '====================================================================================================
        ''' <summary>
        ''' The Cache objects handles caching. Use this class to save blocks of data you will use again. See CPCacheBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Cache() As CPCacheBaseClass 'Implements BaseClasses.CPBaseClass.Cache
        '
        '====================================================================================================
        ''' <summary>
        ''' The Db object handles direct access to the Database. The ContentSet functions in the CPCSBaseClass are prefered for general use. See the CPDBBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Db() As CPDbBaseClass 'Implements BaseClasses.CPBaseClass.Db
        '
        '====================================================================================================
        ''' <summary>
        ''' The Email object handles email functions. See CPEmailBaseClass for more information.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Email() As CPEmailBaseClass 'Implements BaseClasses.CPBaseClass.Email
        '
        '====================================================================================================
        ''' <summary>
        ''' The Content class handles functions related to content meta such as determining the table used for a content definition, getting a recordid based on the name, or accessing the methods that control workflow publishing. See CPContentBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Content() As CPContentBaseClass 'Implements BaseClasses.CPBaseClass.Content
        '
        '====================================================================================================
        ''' <summary>
        ''' The addon class handles access to an add-on's features. Use the Utils object to run an cpcore.addon. An instance of the Addon class is passed to the executing addon in the MyAddon object so it can access any features needed. See the CPAddonBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Addon() As CPAddonBaseClass 'Implements BaseClasses.CPBaseClass.Addon
        '
        '====================================================================================================
        ''' <summary>
        ''' The Utils class handles basic utilities and other features not classified. See CPUtilsBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Utils() As CPUtilsBaseClass 'Implements BaseClasses.CPBaseClass.Utils
        '
        '====================================================================================================
        ''' <summary>
        ''' The Doc object handles features related to the document (page) being contructed in the current call. See CPDocBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Doc() As CPDocBaseClass 'Implements BaseClasses.CPBaseClass.Doc
        '
        '====================================================================================================
        ''' <summary>
        ''' The Site Class handles features related to the current site. See CPSiteBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Site() As CPSiteBaseClass 'Implements BaseClasses.CPBaseClass.Site
        '
        '====================================================================================================
        ''' <summary>
        ''' The MyAddon object is an instance of the Addon class created before an add-ons execute method is called. See CPAddonBaseClass for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property MyAddon() As CPAddonBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' Legacy file object. Use cdnFiles, wwwFiles, privateFiles and tempFiles.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Legacy file object. Use cdnFiles, wwwFiles, privateFiles and tempFiles.")> Public MustOverride ReadOnly Property File() As CPFileBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' read and write cdn files, like content uploads
        ''' </summary>
        ''' <returns></returns>
        Public MustOverride ReadOnly Property cdnFiles() As CPFileSystemBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' read and write files in the root folder of the application (wwwRoot,htdocs,etc)
        ''' </summary>
        ''' <returns></returns>
        Public MustOverride ReadOnly Property wwwFiles() As CPFileSystemBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' read and write files not available to the Internet
        ''' </summary>
        ''' <returns></returns>
        Public MustOverride ReadOnly Property privateFiles() As CPFileSystemBaseClass
        '
    End Class

End Namespace








'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    ''' <summary>
    ''' CP.Addon - The Addon class represents the instance of an add-on. To use this class, use its constructor and open an cpcore.addon. 
    ''' Use these properties to retrieve it's configuration
    ''' </summary>
    ''' <remarks></remarks>
    Public MustInherit Class CPAddonBaseClass
        '
        '====================================================================================================
        ''' <summary>
        ''' When true, this add-on is displayed on and can be used from the admin navigator.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Admin() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' A crlf delimited list of name=value pairs. These pairs create an options dialog available to administrators in advance edit mode. When the addon is executed, the values selected are available through the cp.doc.var("name") method.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ArgumentList() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' When true, this addon returns the javascript code necessary to implement this object as ajax.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property AsAjax() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' When true, the system only uses the custom styles field when building the page. This field is not updated with add-on updates.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property BlockDefaultStyles() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The guid used to uniquely identify the add-on
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ccGuid() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The ID local to this site of the collection which installed this cpcore.addon.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property CollectionID() As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' When true, this addon can be placed in the content of pages.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Content() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' text copy is added to the addon content during execution.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks>
        ''' Addon content is assembled in the following order: TextContent + HTMLContent + IncludeContent + ScriptCallbackContent + FormContent + RemoteAssetContent + ScriptContent + ObjectContent + AssemblyContent.
        ''' </remarks>
        Public MustOverride ReadOnly Property Copy() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' text copy is added to the addon content during execution.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks>
        ''' Addon content is assembled in the following order: TextContent + HTMLContent + IncludeContent + ScriptCallbackContent + FormContent + RemoteAssetContent + ScriptContent + ObjectContent + AssemblyContent.
        ''' </remarks>
        Public MustOverride ReadOnly Property CopyText() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' Styles that are rendered on the page when the addon is executed. Custom styles are editable and are not modified when the add-on is updated.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property CustomStyles() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' Styles that are included with the add-on and are updated when the add-on is updated. See BlockdefaultStyles to block these.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property DefaultStyles() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The add-on description is displayed in the addon manager
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Description() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' When present, the system calls the execute method of an objected created from this dot net class namespace.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks>
        ''' Addon content is assembled in the following order: TextContent + HTMLContent + IncludeContent + ScriptCallbackContent + FormContent + RemoteAssetContent + ScriptContent + ObjectContent + AssemblyContent.
        ''' </remarks>
        Public MustOverride ReadOnly Property DotNetClass() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' This is an xml stucture that the system executes to create an admin form. See the support.contensive.com site for more details.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property FormXML() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' This copy is displayed when the help icon for this addon is clicked.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Help() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' If present, this link is displayed when the addon icon is clicked.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property HelpLink() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' When present, this icon will be used when the add-on is displayed in the addon manager and when edited. The height, width and sprites must also be set.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property IconFilename() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The height in pixels of the icon referenced by the iconfilename.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property IconHeight() As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' The number of images in the icon. There can be multiple images stacked top-to-bottom in the file. The first is the normal image. the second is the hover-over image. The third is the clicked image.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property IconSprites() As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' The width of the icon referenced by the iconfilename
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property IconWidth() As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' The local ID of this addon on this site.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ID() As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' When true, this addon will be displayed in an html iframe.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property InFrame() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' When true, the system will assume the addon returns html that is inline, as opposed to block. This is used to vary the edit icon behaviour.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property IsInline() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' Javascript code that will be placed in the document right before the end-body tag. Do not include script tags.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property JavaScriptBodyEnd() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' Javascript code that will be placed in the head of the document. Do no include script tags.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property JavascriptInHead() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' Javascript that will be executed in the documents onload event.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Create onready or onload events within your javascript. This method will be deprecated.", False)> Public MustOverride ReadOnly Property JavaScriptOnLoad() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' A URL to a webserver that returns javascript. This URL will be added as the src attribute of a script tag, and placed in the content where this Add-on is inserted. This URL can be to any server-side program on any server, provided it returns javascript.
        ''' For instance, if you have a script page that returns javascript,put the URL of that page here. The addon can be dropped on any page and will execute the script. Your script can be from any site. This technique is used in widgets and avoids the security issues with ajaxing from another site.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Link() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' Text here will be added to the meta description section of the document head.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property MetaDescription() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' This is a comma or crlf delimited list of phrases that will be added to the document's meta keyword list
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property MetaKeywordList() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The name of the cpcore.addon.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Name() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The type of navigator entry to be made. Choices are: Add-on,Report,Setting,Tool
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property NavIconType() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' If present, this string will be used as an activex programid to create an object and call it's execute method.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ObjectProgramID() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' If true, this addon will be execute at the end of every page and its content added to right before the end-body tag
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property OnBodyEnd() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' If true, this addon will be execute at the start of every page and it's content added to right after the body tag
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property OnBodyStart() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' if true, this add-on will be executed on every page and its content added right after the content box.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property OnContentEnd() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' If true, this add-on will be executed on every page and its content added right before the content box
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property OnContentStart() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' Open an add-on with it's local id before accessing its properties
        ''' </summary>
        ''' <param name="AddonId"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function Open(ByVal AddonId As Integer) As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' open an add-on with its name or guid before accessing its properties
        ''' </summary>
        ''' <param name="AddonNameOrGuid"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function Open(ByVal AddonNameOrGuid As String) As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' All content in the field will be added directly, as-is to the document head.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property OtherHeadTags() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' All content in the field will be added to the documents title tag
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property PageTitle() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' When present, this add-on will be executed stand-alone without a webpage periodically at this interval (in minutes).
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ProcessInterval() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The next time this add-on is scheduled to run as a processs
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ProcessNextRun() As Date
        '
        '====================================================================================================
        ''' <summary>
        ''' Check true, this addon will be run once within the next minute as a stand-alone process.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ProcessRunOnce() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' 
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property RemoteAssetLink() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' if true, this add-on can be executed as a remote method. The name of the addon is used as the url.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property RemoteMethod() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' When present, this text will be added to the robots.txt content for the site. This content is editable through the preferences page
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property RobotsTxt() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' When present, the first routine of this script will be executed when the add-on is executed and its return added to the add-ons return
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ScriptCode() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' if the ScriptCode has more than one routine and you want to run one other than the first, list is here.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ScriptEntryPoint() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' The script language selected for this script.
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property ScriptLanguage() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' A comma delimited list of the local id values of shared style record that will display with this add-on
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property SharedStyles() As String
        '
        '====================================================================================================
        ''' <summary>
        ''' 
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property Template() As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name="privatePathFilename"></param>
        ''' <param name="returnUserError"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionFile(privatePathFilename As String, ByRef returnUserError As String) As Boolean
        '
        '====================================================================================================
        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name="collectionGuid"></param>
        ''' <param name="returnUserError"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionFromLibrary(collectionGuid As String, ByRef returnUserError As String) As Boolean
    End Class
End Namespace



'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    ''' <summary>
    ''' CP.Block - an object that holds and manipulates a block of html
    ''' </summary>
    ''' <remarks></remarks>
    Public MustInherit Class CPBlockBaseClass
        ''' <summary>
        ''' Load the block with an html string
        ''' </summary>
        ''' <param name="htmlString"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub Load(ByVal htmlString As String)
        ''' <summary>
        ''' load the block with the entire contents of a file in the wwwRoot
        ''' </summary>
        ''' <param name="wwwFileName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub OpenFile(ByVal wwwFileName As String)
        ''' <summary>
        ''' load the block with the contents of a record in Copy Content
        ''' </summary>
        ''' <param name="copyRecordName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub OpenCopy(ByVal copyRecordName As String)
        ''' <summary>
        ''' load the block with the contents of a record in Layouts
        ''' </summary>
        ''' <param name="layoutRecordName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub OpenLayout(ByVal layoutRecordName As String)
        ''' <summary>
        ''' load the block with the body of a file in the wwwRoot
        ''' </summary>
        ''' <param name="wwwFileName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub ImportFile(ByVal wwwFileName As String)
        ''' <summary>
        ''' set the innerHtml of an element in the current block specified by the findSelector
        ''' </summary>
        ''' <param name="findSelector"></param>
        ''' <param name="htmlString"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SetInner(ByVal findSelector As String, ByVal htmlString As String)
        ''' <summary>
        ''' Return the innerHtml from the current block specified by the findSelector
        ''' </summary>
        ''' <param name="findSelector"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetInner(ByVal findSelector As String) As String
        ''' <summary>
        ''' Set the OuterHtml in the current block specified by the findSelector to the htmlString
        ''' </summary>
        ''' <param name="findSelector"></param>
        ''' <param name="htmlString"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SetOuter(ByVal findSelector As String, ByVal htmlString As String)
        ''' <summary>
        ''' return the outer Html specified by the findSelector
        ''' </summary>
        ''' <param name="findSelector"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetOuter(ByVal findSelector As String) As String
        ''' <summary>
        ''' append the htmlString into the current Block
        ''' </summary>
        ''' <param name="htmlString"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub Append(ByVal htmlString As String)
        ''' <summary>
        ''' Prepend the htmlString on the current block
        ''' </summary>
        ''' <param name="htmlString"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub Prepend(ByVal htmlString As String)
        ''' <summary>
        ''' return the entire html of the current block
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetHtml() As String
        ''' <summary>
        '''  Clear the contents of the current block
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub Clear()
    End Class
End Namespace



'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    ''' <summary>
    ''' CP.Cache - contains features to perform simple caching functions
    ''' </summary>
    ''' <remarks></remarks>
    Public MustInherit Class CPCacheBaseClass
        '
        ''' <summary>
        ''' clear all cache based on any content in a list provided
        ''' </summary>
        ''' <param name="ContentNameList"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub Clear(ByVal ContentNameList As String)
        ''' <summary>
        ''' Read the value of a cache. If the cache is cleared, an empty string is returned.
        ''' </summary>
        ''' <param name="key"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function Read(ByVal key As String) As String
        Public MustOverride Function getObject(ByVal key As String) As Object
        Public MustOverride Function getText(ByVal key As String) As String
        Public MustOverride Function getInteger(ByVal key As String) As Integer
        Public MustOverride Function getNumber(ByVal key As String) As Double
        Public MustOverride Function getDate(ByVal key As String) As Date
        Public MustOverride Function getBoolean(ByVal key As String) As Boolean
        Public MustOverride Sub Save(ByVal key As String, ByVal Value As String)
        Public MustOverride Sub Save(ByVal key As String, ByVal Value As String, ByVal tagCommaList As String)
        Public MustOverride Sub Save(ByVal key As String, ByVal Value As String, ByVal tagCommaList As String, ByVal ClearOnDate As Date)
        Public MustOverride Sub setKey(ByVal key As String, ByVal Value As Object)
        Public MustOverride Sub setKey(ByVal key As String, ByVal Value As Object, ByVal invalidationDate As Date)
        Public MustOverride Sub setKey(ByVal key As String, ByVal Value As Object, ByVal tagList As List(Of String))
        Public MustOverride Sub setKey(ByVal key As String, ByVal Value As Object, ByVal invalidationDate As Date, ByVal tagList As List(Of String))
        Public MustOverride Sub setKey(ByVal key As String, ByVal Value As Object, ByVal tag As String)
        Public MustOverride Sub setKey(ByVal key As String, ByVal Value As Object, ByVal invalidationDate As Date, ByVal tag As String)
        ''' <summary>
        ''' Clear all system caches. Use this call to flush all internal caches.
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub ClearAll()
        '
        Public MustOverride Sub InvalidateTag(ByVal tag As String)
        Public MustOverride Sub InvalidateAll()
        Public MustOverride Sub InvalidateTagList(ByVal tagList As List(Of String))
        Public MustOverride Sub InvalidateContentRecord(ByVal contentName As String, recordId As Integer)
    End Class

End Namespace



Option Explicit On
Option Strict On
'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPContentBaseClass
        ''' <summary>
        ''' Get the string from the 'Copy Content' record based on it's name. If the record does not exist it is created with the default value provided.
        ''' </summary>
        ''' <param name="CopyName"></param>
        ''' <param name="DefaultContent"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetCopy(ByVal CopyName As String, Optional ByVal DefaultContent As String = "") As String
        ''' <summary>
        ''' Get the string from the 'Copy Content' record based on it's name. If the record does not exist it is created with the default value provided.
        ''' </summary>
        ''' <param name="CopyName"></param>
        ''' <param name="DefaultContent"></param>
        ''' <param name="personalizationPeopleId"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetCopy(ByVal CopyName As String, ByVal DefaultContent As String, personalizationPeopleId As Integer) As String
        ''' <summary>
        ''' Set a string in a 'Copy Content' record. The record will be created or modified.
        ''' </summary>
        ''' <param name="CopyName"></param>
        ''' <param name="Content"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SetCopy(ByVal CopyName As String, ByVal Content As String)
        ''' <summary>
        ''' Get an icon linked to the administration site which adds a new record to the content.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="PresetNameValueList">A comma delimited list of name=value pairs. Each name is a field name and the value is used to prepopulate the new record.</param>
        ''' <param name="AllowPaste">If true and the content supports cut-paste from the public site, the returned string will include a cut icon.</param>
        ''' <param name="IsEditing">If false, this call returns nothing. Set it true if IsEdiing( contentname ) is true.</param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetAddLink(ByVal ContentName As String, ByVal PresetNameValueList As String, ByVal AllowPaste As Boolean, ByVal IsEditing As Boolean) As String 'Implements BaseClasses.CPContentBaseClass.GetAddLink
        ''' <summary>
        ''' Returns an SQL compatible where-clause which includes all the contentcontentid values allowed for this content name.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetContentControlCriteria(ByVal ContentName As String) As String 'Implements BaseClasses.CPContentBaseClass.GetContentControlCriteria
        ''' <summary>
        ''' Returns a named field property. Valid values for PropertyName are the field names of the 'Content Fields' content definition, also found as the columns in the ccfields table.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="FieldName"></param>
        ''' <param name="PropertyName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetFieldProperty(ByVal ContentName As String, ByVal FieldName As String, ByVal PropertyName As String) As String 'Implements BaseClasses.CPContentBaseClass.GetFieldProperty
        ''' <summary>
        ''' Returns the content id given its name
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetID(ByVal ContentName As String) As Integer 'Implements BaseClasses.CPContentBaseClass.GetId
        ''' <summary>
        ''' Returns a named content property. Valid values for PropertyName are the field names of the 'Content' content definition, also found as the columns in the ccfields table.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="PropertyName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetProperty(ByVal ContentName As String, ByVal PropertyName As String) As String 'Implements BaseClasses.CPContentBaseClass.GetProperty
        ''' <summary>
        ''' Returns the datasource name of the content given.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetDataSource(ByVal ContentName As String) As String 'Implements BaseClasses.CPContentBaseClass.GetDataSource
        ''' <summary>
        ''' Get an icon linked to the administration site which edits the referenced record. The record is identified by its ID. The recordname is only used for the display caption.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordID"></param>
        ''' <param name="AllowCut">If true and the content allows cut and paste, and cut icon will be included in the return string.</param>
        ''' <param name="RecordName">Used as a caption for the label</param>
        ''' <param name="IsEditing">If false, this call returns nothing. Set it true if IsEdiing( contentname ) is true.</param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetEditLink(ByVal ContentName As String, ByVal RecordID As String, ByVal AllowCut As Boolean, ByVal RecordName As String, ByVal IsEditing As Boolean) As String 'Implements BaseClasses.CPContentBaseClass.GetEditLink
        ''' <summary>
        ''' Returns the primary link alias for the record id and querystringsuffix. If no link alias exists, it defaultvalue is returned.
        ''' </summary>
        ''' <param name="PageID"></param>
        ''' <param name="QueryStringSuffix">In the case where an add-on is on the page, there may be many unique documents possible from the one pageid. Each possible variation is determined by values in the querystring added by the cpcore.addon. These name=value pairs in Querystring format are used to identify additional link aliases.</param>
        ''' <param name="DefaultLink">If no link alias is found, this value is returned.</param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetLinkAliasByPageID(ByVal PageID As Integer, ByVal QueryStringSuffix As String, ByVal DefaultLink As String) As String 'Implements BaseClasses.CPContentBaseClass.GetLinkAliasByPageId
        ''' <summary>
        ''' Return the appropriate link for a page.
        ''' </summary>
        ''' <param name="PageID"></param>
        ''' <param name="QueryStringSuffix">If a link alias exists, this is used to lookup the correct alias. See GetLinkAliasByPageID for details. In other cases, this is added to the querystring.</param>
        ''' <param name="AllowLinkAlias"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetPageLink(ByVal PageID As Integer, Optional ByVal QueryStringSuffix As String = "", Optional ByVal AllowLinkAlias As Boolean = True) As String 'Implements BaseClasses.CPContentBaseClass.GetPageLink
        ''' <summary>
        ''' Return a record's ID given it's name. If duplicates exist, the first one ordered by ID is returned.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetRecordID(ByVal ContentName As String, ByVal RecordName As String) As Integer 'Implements BaseClasses.CPContentBaseClass.GetRecordId
        ''' <summary>
        ''' Return a records name given it's ID.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordID"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetRecordName(ByVal ContentName As String, ByVal RecordID As Integer) As String 'Implements BaseClasses.CPContentBaseClass.GetRecordName
        ''' <summary>
        ''' Get the table used for a content definition.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetTable(ByVal ContentName As String) As String 'Implements BaseClasses.CPContentBaseClass.GetTable
        ''' <summary>
        ''' If a template uses a fixed URL, the returns the link associted with a template. Otherwise it returns a blank string.
        ''' </summary>
        ''' <param name="TemplateID"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetTemplateLink(ByVal TemplateID As Integer) As String 'Implements BaseClasses.CPContentBaseClass.GetTemplateLink
        ''' <summary>
        ''' Used to test if a field exists in a content definition
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function IsField(ByVal ContentName As String, ByVal FieldName As String) As Boolean 'Implements BaseClasses.CPContentBaseClass.IsField
        ''' <summary>
        ''' Returns true if the record is currently being edited.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordID"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function IsLocked(ByVal ContentName As String, ByVal RecordID As String) As Boolean 'Implements BaseClasses.CPContentBaseClass.IsLocked
        ''' <summary>
        ''' Returns true if the childcontentid is a child of the parentcontentid
        ''' </summary>
        ''' <param name="ChildContentID"></param>
        ''' <param name="ParentContentID"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function IsChildContent(ByVal ChildContentID As String, ByVal ParentContentID As String) As Boolean 'Implements BaseClasses.CPContentBaseClass.IsChildContent
        ''' <summary>
        ''' Returns true if the content is currently using workflow editing.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function IsWorkflow(ByVal ContentName As String) As Boolean 'Implements BaseClasses.CPContentBaseClass.IsWorkflow
        ''' <summary>
        ''' If Workflow editing, the record is published.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordID"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub PublishEdit(ByVal ContentName As String, ByVal RecordID As Integer) 'Implements BaseClasses.CPContentBaseClass.PublishEdit
        ''' <summary>
        ''' If workflow editing, the record is submitted for pushlishing
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordID"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SubmitEdit(ByVal ContentName As String, ByVal RecordID As Integer) 'Implements BaseClasses.CPContentBaseClass.SubmitEdit
        ''' <summary>
        ''' If workflow editing, edits to the record are aborted and the edit record is returned to the condition of hte live record. This condition is used in the Workflow publishing tool.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordId"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub AbortEdit(ByVal ContentName As String, ByVal RecordId As Integer) 'Implements BaseClasses.CPContentBaseClass.AbortEdit
        ''' <summary>
        ''' If workflow editing, the record is marked as approved for publishing. This condition is used in the Workflow publishing tool.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="RecordId"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub ApproveEdit(ByVal ContentName As String, ByVal RecordId As Integer) 'Implements BaseClasses.CPContentBaseClass.ApproveEdit
        ''' <summary>
        ''' Returns the html layout field of a layout record
        ''' </summary>
        ''' <param name="layoutName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function getLayout(ByVal layoutName As String) As String
        ''' <summary>
        ''' Inserts a record and returns the Id for the record
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Please use AddRecord(ContentName as String)", True)>
        Public MustOverride Function AddRecord(ByVal ContentName As Object) As Integer
        Public MustOverride Function AddRecord(ByVal ContentName As String) As Integer
        Public MustOverride Function AddRecord(ByVal ContentName As String, ByVal recordName As String) As Integer
        ''' <summary>
        ''' Delete records based from a table based on a content name and SQL criteria.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <remarks></remarks>
        '''
        Public MustOverride Function AddContent(ByVal ContentName As String) As Integer
        Public MustOverride Function AddContent(ByVal ContentName As String, sqlTableName As String) As Integer
        Public MustOverride Function AddContent(ByVal ContentName As String, sqlTableName As String, dataSource As String) As Integer
        ''' <summary>
        ''' Create a new field in an existing content, return the fieldid
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="FieldName"></param>
        ''' <param name="FieldType"></param>
        ''' <returns></returns>
        Public MustOverride Function AddContentField(ByVal ContentName As String, FieldName As String, FieldType As Integer) As Integer
        ''' <summary>
        ''' Delete a content from the system, sqlTable is left intact. Use db.DeleteTable to drop the table
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub DeleteContent(ByVal ContentName As String)
        ''' <summary>
        ''' Delete records based from a table based on a content name and SQL criteria.
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="SQLCriteria"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub Delete(ByVal ContentName As String, ByVal SQLCriteria As String)
        ''' <summary>
        ''' Returns a linked icon to the admin list page for the content
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetListLink(ByVal ContentName As String) As String
    End Class

End Namespace


'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    ''' <summary>
    ''' CP.CS - The primary interface to the database. This object is similar to a recordset. It includes features of the content meta data. When a record is inserted, the default values of the record are available to read.
    ''' </summary>
    ''' <remarks></remarks>
    Public MustInherit Class CPCSBaseClass
        'public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        ''' <summary>
        ''' Inserts a new content row
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function Insert(ByVal ContentName As String) As Boolean
        ''' <summary>
        ''' Opens a record set with the record specified by the recordId
        ''' </summary>
        ''' <param name="contentName"></param>
        ''' <param name="recordId"></param>
        ''' <param name="SelectFieldList"></param>
        ''' <param name="activeOnly"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OpenRecord(ByVal contentName As String, ByVal recordId As Integer, Optional ByVal SelectFieldList As String = "", Optional ByVal activeOnly As Boolean = True) As Boolean
        ''' <summary>
        ''' Opens a record set with the records specified by the sqlCriteria
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="SQLCriteria"></param>
        ''' <param name="SortFieldList"></param>
        ''' <param name="ActiveOnly"></param>
        ''' <param name="SelectFieldList"></param>
        ''' <param name="PageSize"></param>
        ''' <param name="PageNumber"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function Open(ByVal ContentName As String, Optional ByVal SQLCriteria As String = "", Optional ByVal SortFieldList As String = "", Optional ByVal ActiveOnly As Boolean = True, Optional ByVal SelectFieldList As String = "", Optional ByVal PageSize As Integer = 10, Optional ByVal PageNumber As Integer = 1) As Boolean
        'Public MustOverride Function Open(ByVal ContentName As String, Optional ByVal SQLCriteria As String = "", Optional ByVal SortFieldList As String = "", Optional ByVal ActiveOnly As Boolean = True, Optional ByVal SelectFieldList As String = "", Optional ByVal ignore As Integer = 10, Optional ByVal PageNumber As Integer = 1, Optional ByVal PageSize As Integer = 0) As Boolean
        ''' <summary>
        ''' Opens a record set with user records that are in a Group
        ''' </summary>
        ''' <param name="GroupName"></param>
        ''' <param name="SQLCriteria"></param>
        ''' <param name="SortFieldList"></param>
        ''' <param name="ActiveOnly"></param>
        ''' <param name="PageSize"></param>
        ''' <param name="PageNumber"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OpenGroupUsers(ByVal GroupName As String, Optional ByVal SQLCriteria As String = "", Optional ByVal SortFieldList As String = "", Optional ByVal ActiveOnly As Boolean = True, Optional ByVal PageSize As Integer = 10, Optional ByVal PageNumber As Integer = 1) As Boolean
        ''' <summary>
        ''' Opens a record set with user records that are in a Group
        ''' </summary>
        ''' <param name="GroupList"></param>
        ''' <param name="SQLCriteria"></param>
        ''' <param name="SortFieldList"></param>
        ''' <param name="ActiveOnly"></param>
        ''' <param name="PageSize"></param>
        ''' <param name="PageNumber"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OpenGroupUsers(ByVal GroupList As List(Of String), Optional ByVal SQLCriteria As String = "", Optional ByVal SortFieldList As String = "", Optional ByVal ActiveOnly As Boolean = True, Optional ByVal PageSize As Integer = 10, Optional ByVal PageNumber As Integer = 1) As Boolean
        ''' <summary>
        ''' deprecated. Use OpenGroupUsers.
        ''' </summary>
        ''' <param name="GroupCommaList"></param>
        ''' <param name="SQLCriteria"></param>
        ''' <param name="SortFieldList"></param>
        ''' <param name="ActiveOnly"></param>
        ''' <param name="PageSize"></param>
        ''' <param name="PageNumber"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Use OpenGroupUsers instead. The GroupCommaList is a comma delimited list of groups and cannot handle group names that include a comma.", False)>
        Public MustOverride Function OpenGroupListUsers(ByVal GroupCommaList As String, Optional ByVal SQLCriteria As String = "", Optional ByVal SortFieldList As String = "", Optional ByVal ActiveOnly As Boolean = True, Optional ByVal PageSize As Integer = 10, Optional ByVal PageNumber As Integer = 1) As Boolean
        ''' <summary>
        ''' Opens a record set based on an sql statement
        ''' </summary>
        ''' <param name="SQL"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OpenSQL(ByVal SQL As String) As Boolean
        ''' <summary>
        ''' Opens a record set based on an sql statement
        ''' </summary>
        ''' <param name="SQL"></param>
        ''' <param name="DataSourcename"></param>
        ''' <param name="PageSize"></param>
        ''' <param name="PageNumber"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OpenSQL(ByVal SQL As String, ByVal DataSourcename As String, Optional ByVal PageSize As Integer = 10, Optional ByVal PageNumber As Integer = 1) As Boolean
        ''' <summary>
        ''' Opens a record set based on an sql statement, (polymorphism is not supported by active scripting)
        ''' </summary>
        ''' <param name="SQL"></param>
        ''' <param name="DataSourcename"></param>
        ''' <param name="PageSize"></param>
        ''' <param name="PageNumber"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OpenSQL2(ByVal SQL As String, Optional ByVal DataSourcename As String = "default", Optional ByVal PageSize As Integer = 10, Optional ByVal PageNumber As Integer = 1) As Boolean
        ''' <summary>
        '''  Closes an open record set
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub Close()
        ''' <summary>
        ''' Returns a form input element based on a content field definition
        ''' </summary>
        ''' <param name="ContentName"></param>
        ''' <param name="FieldName"></param>
        ''' <param name="Height"></param>
        ''' <param name="Width"></param>
        ''' <param name="HtmlId"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetFormInput(ByVal ContentName As String, ByVal FieldName As String, Optional ByVal Height As String = "", Optional ByVal Width As String = "", Optional ByVal HtmlId As String = "") As Object
        ''' <summary>
        ''' Deletes the current row
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub Delete()
        ''' <summary>
        ''' Returns true if the given field is valid for this record set
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function FieldOK(ByVal FieldName As String) As Boolean
        ''' <summary>
        ''' Move to the first record in the current record set
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub GoFirst()
        ''' <summary>
        ''' Returns an icon linked to the add function in the admin site for this content
        ''' </summary>
        ''' <param name="PresetNameValueList"></param>
        ''' <param name="AllowPaste"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetAddLink(Optional ByVal PresetNameValueList As String = "", Optional ByVal AllowPaste As Boolean = False) As String
        ''' <summary>
        ''' Returns the field value cast as a boolean
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetBoolean(ByVal FieldName As String) As Boolean
        ''' <summary>
        ''' Returns the field value cast as a date
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetDate(ByVal FieldName As String) As Date
        ''' <summary>
        ''' Returns an icon linked to the edit function in the admin site for this content
        ''' </summary>
        ''' <param name="AllowCut"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetEditLink(Optional ByVal AllowCut As Boolean = False) As String
        ''' <summary>
        ''' Returns the filename for the field, if a filename is related to the field type. Use this call to create the appropriate filename when a new file is added. The filename with the appropriate path is created or returned. This file and path is relative to the site's content file path and does not include a leading slash. To use this file in a URL, prefix with cp.site.filepath.
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <param name="OriginalFilename"></param>
        ''' <param name="ContentName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetFilename(ByVal FieldName As String, Optional ByVal OriginalFilename As String = "", Optional ByVal ContentName As String = "") As String
        ''' <summary>
        ''' Returns the field value cast as an integer
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetInteger(ByVal FieldName As String) As Integer
        ''' <summary>
        ''' Returns the field value cast as a number (double)
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetNumber(ByVal FieldName As String) As Double
        ''' <summary>
        ''' Returns the number of rows in the result.
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetRowCount() As Integer
        ''' <summary>
        ''' returns the query used to generate the results
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetSQL() As String
        ''' <summary>
        ''' Returns the result and converts it to a text type. For field types that store text in files, the text is returned instead of the filename. These include textfile, cssfile, javascriptfile. For file types that do not contain text, the filename is returned. These include filetype and imagefiletype.
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetText(ByVal FieldName As String) As String
        ''' <summary>
        ''' Returns the result of getText() after verifying it's content is valid for use in Html content. If the field is a fieldTypeHtml the content is returned without conversion. If the field is any other type, the content is HtmlEncoded first (> converted to &gt;, etc)
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function GetHtml(ByVal FieldName As String) As String
        ''' <summary>
        ''' Deprecated. Returns the filename for field types that store text in files.
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Use getText to get copy, getFilename to get file.", False)> Public MustOverride Function GetTextFile(ByVal FieldName As String) As String
        ''' <summary>
        ''' Move to the next record in a result set.
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub GoNext()
        ''' <summary>
        ''' Move to the next record in a result set and return true if the row is valid.
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Function NextOK() As Boolean
        ''' <summary>
        ''' Returns true if there is valid data in the current row of the result set.
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride Function OK() As Boolean
        ''' <summary>
        ''' Forces a save of any changes made to the current row. A save occurs automatically when the content set is closed or when it moves to another row.
        ''' </summary>
        ''' <remarks></remarks>
        Public MustOverride Sub Save()
        ''' <summary>
        ''' Sets a value in a field of the current row.
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <param name="FieldValue"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SetField(ByVal FieldName As String, ByVal FieldValue As Object)
        Public MustOverride Sub SetField(ByVal FieldName As String, ByVal FieldValue As String)
        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <param name="Copy"></param>
        ''' <param name="ContentName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SetFile(ByVal FieldName As String, ByVal Copy As String, ByVal ContentName As String)
        ''' <summary>
        ''' Processes a value from the incoming request to a field in the current row.
        ''' </summary>
        ''' <param name="FieldName"></param>
        ''' <param name="RequestName"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub SetFormInput(ByVal FieldName As String, Optional ByVal RequestName As String = "")
        ''' <summary>
        ''' Return the value directly from the field, without the conversions associated with GetText().
        ''' </summary>
        ''' <param name="fieldName"></param>
        ''' <returns></returns>
        Public MustOverride Function GetValue(ByVal fieldName As String) As String

    End Class

End Namespace

Imports System.Data
'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    ''' <summary>
    ''' CP.Db - This object references the database directly
    ''' </summary>
    ''' <remarks></remarks>
    Public MustInherit Class CPDbBaseClass
        Public MustOverride Sub Delete(ByVal DataSourcename As String, ByVal TableName As String, ByVal RecordId As Integer)
        Public MustOverride Function GetConnectionString(ByVal DataSourcename As String) As String
        Public MustOverride Function GetDataSourceType(ByVal DataSourcename As String) As Integer
        Public MustOverride Function GetTableID(ByVal TableName As String) As Integer
        Public MustOverride Function IsTable(ByVal DataSourcename As String, ByVal TableName As String) As Boolean
        Public MustOverride Function IsTableField(ByVal DataSourcename As String, ByVal TableName As String, ByVal FieldName As String) As Boolean
        Public MustOverride Function EncodeSQLBoolean(ByVal SourceBoolean As Boolean) As String
        Public MustOverride Function EncodeSQLDate(ByVal SourceDate As Date) As String
        Public MustOverride Function EncodeSQLNumber(ByVal SourceNumber As Double) As String
        Public MustOverride Function EncodeSQLText(ByVal SourceText As String) As String
        Public MustOverride Function ExecuteSQL(ByVal SQL As String, Optional ByVal DataSourcename As String = "Default", Optional ByVal Retries As String = "0", Optional ByVal PageSize As String = "10", Optional ByVal PageNumber As String = "1") As Object
        '
        ' need: executeQuery() returns dataTable
        ' need: executeNonQuery() returns recordsAffected
        ' need: executeNonQueryAsync() returns nothing
        '
        'Public MustOverride Function ExecuteSQL_GetRecordSet(ByVal SQL As String) As ADODB.Recordset
        'Public MustOverride Function ExecuteSQL_GetRecordSet(ByVal SQL As String, ByVal MaxRows As Integer) As ADODB.Recordset
        'Public MustOverride Function ExecuteSQL_GetRecordSet(ByVal SQL As String, ByVal MaxRows As Integer, ByVal PageSize As Integer, ByVal PageNumber As Integer) As ADODB.Recordset
        'Public MustOverride Function ExecuteSQL_GetRecordSet(ByVal SQL As String, ByVal DataSourcename As String) As ADODB.Recordset
        'Public MustOverride Function ExecuteSQL_GetRecordSet(ByVal SQL As String, ByVal DataSourcename As String, ByVal MaxRows As Integer, ByVal PageSize As Integer, ByVal PageNumber As Integer) As ADODB.Recordset
        'Public MustOverride Function ExecuteSQL_GetDataTable(ByVal SQL As String) As DataTable
        'Public MustOverride Function ExecuteSQL_GetDataTable(ByVal SQL As String, ByVal MaxRows As Integer) As DataTable
        'Public MustOverride Function ExecuteSQL_GetDataTable(ByVal SQL As String, ByVal MaxRows As Integer, PageSize As Integer, ByVal PageNumber As Integer) As DataTable
        'Public MustOverride Function ExecuteSQL_GetDataTable(ByVal SQL As String, ByVal DataSourcename As String) As DataTable
        'Public MustOverride Function ExecuteSQL_GetDataTable(ByVal SQL As String, ByVal DataSourcename As String, ByVal MaxRows As Integer, ByVal PageSize As Integer, ByVal PageNumber As Integer) As DataTable
        Public MustOverride Property SQLTimeout() As Integer
        Public MustOverride Function GetRemoteQueryKey(ByVal sql As String, Optional ByVal DataSourceName As String = "Default", Optional ByVal pageSize As Integer = 100) As String
        '
        ' deprecated
        '
        Public MustOverride Function DbGetConnectionString(ByVal DataSourcename As String) As String
        Public MustOverride Function DbGetDataSourceType(ByVal DataSourcename As String) As Integer
        Public MustOverride Function DbGetTableID(ByVal TableName As String) As Integer
        Public MustOverride Function DbIsTable(ByVal DataSourcename As String, ByVal TableName As String) As Boolean
        Public MustOverride Function DbIsTableField(ByVal DataSourcename As String, ByVal TableName As String, ByVal FieldName As String) As Boolean
    End Class

End Namespace


'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPDocBaseClass
        Public MustOverride Property Content() As String
        Public MustOverride ReadOnly Property NavigationStructure() As String
        Public MustOverride Property NoFollow() As Boolean
        Public MustOverride ReadOnly Property PageId() As Integer
        Public MustOverride ReadOnly Property PageName() As String
        Public MustOverride ReadOnly Property RefreshQueryString() As String
        Public MustOverride ReadOnly Property SectionId() As Integer
        Public MustOverride ReadOnly Property StartTime() As Date
        Public MustOverride ReadOnly Property TemplateId() As Integer
        Public MustOverride ReadOnly Property Type() As String
        Public MustOverride Sub AddHeadStyle(ByVal StyleSheet As String)
        Public MustOverride Sub AddHeadStyleLink(ByVal StyleSheetLink As String)
        Public MustOverride Sub AddHeadJavascript(ByVal NewCode As String)
        Public MustOverride Sub AddHeadTag(ByVal HeadTag As String)
        Public MustOverride Sub AddMetaDescription(ByVal MetaDescription As String)
        Public MustOverride Sub AddMetaKeywordList(ByVal MetaKeywordList As String)
        Public MustOverride Sub AddOnLoadJavascript(ByVal NewCode As String)
        Public MustOverride Sub AddTitle(ByVal PageTitle As String)
        Public MustOverride Sub AddRefreshQueryString(ByVal Name As String, ByVal Value As String)
        Public MustOverride Sub AddBodyEnd(ByVal NewCode As String)
        Public MustOverride Property Body() As String
        Public MustOverride ReadOnly Property SiteStylesheet() As String
        Public MustOverride Sub SetProperty(ByVal FieldName As String, ByVal FieldValue As String)
        Public MustOverride Function GetProperty(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As String
        Public MustOverride Function GetText(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As String
        Public MustOverride Function GetBoolean(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Boolean
        Public MustOverride Function GetDate(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Date
        Public MustOverride Function GetInteger(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Integer
        Public MustOverride Function GetNumber(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Double
        Public MustOverride Function IsProperty(ByVal PropertyName As String) As Boolean
        Public MustOverride ReadOnly Property IsAdminSite() As Boolean
        ' deprecated - replaced with Setproperty because c-sharp does not support properties with arguments
        '----------------------------------------------------------------------------------------------------
        'Public MustOverride Property GlobalVar(ByVal Index As String) As String
        Public MustOverride Function get_GlobalVar(ByVal Index As String) As String
        Public MustOverride Sub set_GlobalVar(ByVal Index As String, ByVal Value As String)
        '----------------------------------------------------------------------------------------------------
        'Public MustOverride ReadOnly Property IsGlobalVar(ByVal Index As String) As Boolean
        Public MustOverride Function get_IsGlobalVar(ByVal Index As String) As Boolean
        '----------------------------------------------------------------------------------------------------
        'Public MustOverride ReadOnly Property IsVar(ByVal Index As String) As Boolean
        Public MustOverride Function get_IsVar(ByVal Index As String) As Boolean
        '----------------------------------------------------------------------------------------------------
        'Public MustOverride Property Var(ByVal Index As String) As String
        Public MustOverride Function get_Var(ByVal Index As String) As String
        Public MustOverride Sub Var(ByVal Index As String, ByVal Value As String)

    End Class

End Namespace


'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPEmailBaseClass
        ''' <summary>
        ''' Returns the site's default email from address
        ''' </summary>
        ''' <value></value>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public MustOverride ReadOnly Property fromAddressDefault() As String
        ''' <summary>
        ''' Sends an email to an email address.
        ''' </summary>
        ''' <param name="ToAddress"></param>
        ''' <param name="FromAddress"></param>
        ''' <param name="Subject"></param>
        ''' <param name="Body"></param>
        ''' <param name="SendImmediately"></param>
        ''' <param name="BodyIsHTML"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub send(ByVal ToAddress As String, ByVal FromAddress As String, ByVal Subject As String, ByVal Body As String, Optional ByVal SendImmediately As Boolean = True, Optional ByVal BodyIsHTML As Boolean = True)
        ''' <summary>
        ''' Sends an email that includes all the form elements in the current webpage response.
        ''' </summary>
        ''' <param name="ToAddress"></param>
        ''' <param name="FromAddress"></param>
        ''' <param name="Subject"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub sendForm(ByVal ToAddress As String, ByVal FromAddress As String, ByVal Subject As String)
        ''' <summary>
        ''' Sends an email to everyone in a group list. The list can be of Group Ids or names. Group names in the list can not contain commas.
        ''' </summary>
        ''' <param name="GroupNameOrIdList"></param>
        ''' <param name="FromAddress"></param>
        ''' <param name="Subject"></param>
        ''' <param name="Body"></param>
        ''' <param name="SendImmediately"></param>
        ''' <param name="BodyIsHTML"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub sendGroup(ByVal GroupNameOrIdList As String, ByVal FromAddress As String, ByVal Subject As String, ByVal Body As String, Optional ByVal SendImmediately As Boolean = True, Optional ByVal BodyIsHTML As Boolean = True)
        'Public MustOverride Sub sendGroup(ByVal GroupList As String, ByVal FromAddress As String, ByVal Subject As String, ByVal Body As String, ByVal SendImmediately As Boolean, ByVal BodyIsHTML As Boolean)
        ''' <summary>
        ''' Send a list of usernames and passwords to the account(s) that include the given email address.
        ''' </summary>
        ''' <param name="UserEmailAddress"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub sendPassword(ByVal UserEmailAddress As String)
        ''' <summary>
        ''' Send a system email record. If the EmailIdOrName field contains a number, it is assumed first to be an Id.
        ''' </summary>
        ''' <param name="EmailIdOrName"></param>
        ''' <param name="AdditionalCopy"></param>
        ''' <param name="AdditionalUserID"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub sendSystem(ByVal EmailIdOrName As String, Optional ByVal AdditionalCopy As String = "", Optional ByVal AdditionalUserID As Integer = 0)
        ''' <summary>
        ''' Send an email using the values in a user record.
        ''' </summary>
        ''' <param name="ToUserID"></param>
        ''' <param name="FromAddress"></param>
        ''' <param name="Subject"></param>
        ''' <param name="Body"></param>
        ''' <param name="SendImmediately"></param>
        ''' <param name="BodyIsHTML"></param>
        ''' <remarks></remarks>
        Public MustOverride Sub sendUser(ByVal ToUserID As String, ByVal FromAddress As String, ByVal Subject As String, ByVal Body As String, Optional ByVal SendImmediately As Boolean = True, Optional ByVal BodyIsHTML As Boolean = True)
        'Public MustOverride Sub sendUser(ByVal ToUserID As String, ByVal FromAddress As String, ByVal Subject As String, ByVal Body As String, ByVal SendImmediately As String, ByVal BodyIsHTML As String)
    End Class


End Namespace






'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPFileBaseClass
        '
        ''' <summary>
        ''' Append content to a text file in the content files. If the file does not exist it will be created.
        ''' </summary>
        ''' <param name="Filename">The filename of the file to be appended. May include subfolders in the content file area. It should not include a leading slash. Folder slashes should be \.</param>
        ''' <param name="FileContent">Test appended to the file</param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdn, cp.File.private, cp.File.appRoot, or cp.File.server instead.", False)>
        Public MustOverride Sub AppendVirtual(ByVal Filename As String, ByVal FileContent As String)
        ''' <summary>
        ''' Copies a file in the content file area to another. If the destination does not exist it is created. Filenames may include subfolders but should not include a leading slash.
        ''' </summary>
        ''' <param name="SourceFilename"></param>
        ''' <param name="DestinationFilename"></param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub CopyVirtual(ByVal SourceFilename As String, ByVal DestinationFilename As String)
        ''' <summary>
        ''' Create a folder given a physical folder path.
        ''' </summary>
        ''' <param name="FolderPath"></param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub CreateFolder(ByVal FolderPath As String)
        ''' <summary>
        ''' Delete a file within the file space.
        ''' </summary>
        ''' <param name="Filename"></param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub Delete(ByVal Filename As String)
        ''' <summary>
        ''' Delete a folder within the file space
        ''' </summary>
        ''' <param name="folderPath"></param>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub DeleteFolder(ByVal folderPath As String)
        ''' <summary>
        ''' Delete a file in the content file area. The filename may contain subfolders and should not begin with a leading slash.
        ''' </summary>
        ''' <param name="Filename"></param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub DeleteVirtual(ByVal Filename As String)
        ''' <summary>
        ''' Read a text file within the file space.
        ''' </summary>
        ''' <param name="Filename"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function Read(ByVal Filename As String) As String
        ''' <summary>
        ''' Read a text file in the content file area. The filename may contain subfolders and should not begin with a leading slash.
        ''' </summary>
        ''' <param name="Filename"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function ReadVirtual(ByVal Filename As String) As String
        ''' <summary>
        ''' Save or create a text file within the file space.
        ''' </summary>
        ''' <param name="Filename"></param>
        ''' <param name="FileContent"></param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub Save(ByVal Filename As String, ByVal FileContent As String)
        ''' <summary>
        ''' Save a text file in the content file area. The filename may contain subfolders and should not begin with a leading slash.
        ''' </summary>
        ''' <param name="Filename"></param>
        ''' <param name="FileContent"></param>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Sub SaveVirtual(ByVal Filename As String, ByVal FileContent As String)
        ''' <summary>
        ''' Get a crlf delimited list of files in a given path. Each row is a tab delimited list of attributes for each file. The attributes are:
        ''' FileName
        ''' Attributes
        ''' DateCreated
        ''' DateLastAccessed
        ''' DateLastModified
        ''' Size
        ''' Type
        ''' </summary>
        ''' <param name="folderName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function fileList(ByVal folderName As String, Optional ByVal pageSize As Integer = 0, Optional ByVal pageNumber As Integer = 1) As String
        ''' <summary>
        ''' Get a crlf delimited list of folders in a given path. Each row is a tab delimited list of attributes for each folder. The attributes are:
        ''' Name
        ''' Attributes
        ''' DateCreated
        ''' DateLastAccessed
        ''' DateLastModified
        ''' Type
        ''' </summary>
        ''' <param name="folderName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function folderList(ByVal folderName As String) As String
        ''' <summary>
        ''' Returns true if a file exists
        ''' </summary>
        ''' <param name="pathFileName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function fileExists(ByVal pathFileName As String) As Boolean
        ''' <summary>
        ''' Returns true if a folder exists
        ''' </summary>
        ''' <param name="folderName"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function folderExists(ByVal folderName As String) As Boolean
        ''' <summary>
        ''' Returns a URL to a file in the File.cdn store
        ''' </summary>
        ''' <param name="virtualFilename"></param>
        ''' <returns></returns>
        <Obsolete("Deprecated, please use cp.File.cdnFiles, cp.File.privateFiles, cp.File.appRootFiles, or cp.File.serverFiles instead.", False)>
        Public MustOverride Function getVirtualFileLink(ByVal virtualFilename As String) As String
    End Class

End Namespace


'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPFileSystemBaseClass
        '
        Public MustOverride Sub append(ByVal Filename As String, ByVal FileContent As String)
        Public MustOverride Sub copy(ByVal SourceFilename As String, ByVal DestinationFilename As String)
        Public MustOverride Sub createFolder(ByVal FolderPath As String)
        Public MustOverride Sub deleteFile(ByVal Filename As String)
        Public MustOverride Sub deleteFolder(ByVal folderPath As String)
        Public MustOverride Function read(ByVal Filename As String) As String
        Public MustOverride Function readBinary(ByVal Filename As String) As Byte()
        Public MustOverride Sub save(ByVal Filename As String, ByVal FileContent As String)
        Public MustOverride Sub saveBinary(ByVal Filename As String, ByVal FileContent As Byte())
        Public MustOverride Function fileList(ByVal folderName As String, Optional ByVal pageSize As Integer = 0, Optional ByVal pageNumber As Integer = 1) As IO.FileInfo()
        Public MustOverride Function folderList(ByVal folderName As String) As IO.DirectoryInfo()
        Public MustOverride Function fileExists(ByVal pathFileName As String) As Boolean
        Public MustOverride Function folderExists(ByVal folderName As String) As Boolean
        Public MustOverride Function saveUpload(ByVal htmlformName As String, ByRef returnFilename As String) As Boolean
        Public MustOverride Function saveUpload(ByVal htmlformName As String, ByVal folderpath As String, ByRef returnFilename As String) As Boolean
    End Class
End Namespace


'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPGroupBaseClass
        '
        ' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
        '
        Public MustOverride Sub Add(ByVal GroupName As String, Optional ByVal GroupCaption As String = "")
        Public MustOverride Sub AddUser(ByVal GroupNameIdOrGuid As String)
        Public MustOverride Sub AddUser(ByVal GroupNameIdOrGuid As String, ByVal UserId As Integer)
        Public MustOverride Sub AddUser(ByVal GroupNameIdOrGuid As String, ByVal UserId As Integer, ByVal DateExpires As Date)
        Public MustOverride Sub Delete(ByVal GroupNameIdOrGuid As String)
        Public MustOverride Function GetId(ByVal GroupNameIdOrGuid As String) As Integer
        Public MustOverride Function GetName(ByVal GroupNameIdOrGuid As String) As String
        Public MustOverride Sub RemoveUser(ByVal GroupNameIdOrGuid As String, Optional ByVal UserId As Integer = 0)
    End Class

End Namespace


'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPHtmlBaseClass

        Enum EditorContentScope
            Page = 1
            Email = 2
            PageTemplate = 3
        End Enum
        '
        Enum EditorUserScope
            Developer = 1
            Administrator = 2
            ContentManager = 3
            PublicUser = 4
            CurrentUser = 5
        End Enum
        'Public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        Public MustOverride Function div(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.div
        Public MustOverride Function p(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.p
        Public MustOverride Function li(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.li
        Public MustOverride Function ul(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.ul
        Public MustOverride Function ol(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.ol
        Public MustOverride Function CheckBox(ByVal HtmlName As String, Optional ByVal HtmlValue As Boolean = False, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.CheckBox
        Public MustOverride Function CheckList(ByVal HtmlName As String, ByVal PrimaryContentName As String, ByVal PrimaryRecordId As Integer, ByVal SecondaryContentName As String, ByVal RulesContentName As String, ByVal RulesPrimaryFieldname As String, ByVal RulesSecondaryFieldName As String, Optional ByVal SecondaryContentSelectSQLCriteria As String = "", Optional ByVal CaptionFieldName As String = "", Optional ByVal IsReadOnly As Boolean = False, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.CheckList
        Public MustOverride Function Form(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "", Optional ByVal ActionQueryString As String = "", Optional ByVal Method As String = "post") As String 'Implements BaseClasses.CPHtmlBaseClass.Form
        Public MustOverride Function h1(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.h1
        Public MustOverride Function h2(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.h2
        Public MustOverride Function h3(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.h3
        Public MustOverride Function h4(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.h4
        Public MustOverride Function h5(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.h5
        Public MustOverride Function h6(ByVal InnerHtml As String, Optional ByVal HtmlName As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.h6
        Public MustOverride Function RadioBox(ByVal HtmlName As String, ByVal HtmlValue As String, ByVal CurrentValue As String, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.RadioBox
        Public MustOverride Function SelectContent(ByVal HtmlName As String, ByVal HtmlValue As String, ByVal ContentName As String, Optional ByVal SQLCriteria As String = "", Optional ByVal NoneCaption As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.SelectContent
        Public MustOverride Function SelectList(ByVal HtmlName As String, ByVal HtmlValue As String, ByVal OptionList As String, Optional ByVal NoneCaption As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.SelectList
        Public MustOverride Sub ProcessCheckList(ByVal HtmlName As String, ByVal PrimaryContentName As String, ByVal PrimaryRecordID As String, ByVal SecondaryContentName As String, ByVal RulesContentName As String, ByVal RulesPrimaryFieldname As String, ByVal RulesSecondaryFieldName As String) 'Implements BaseClasses.CPHtmlBaseClass.ProcessCheckList
        Public MustOverride Sub ProcessInputFile(ByVal HtmlName As String, Optional ByVal VirtualFilePath As String = "")

        ' no -- add these to the filesystem object
        'Public MustOverride Function ProcessInputFile(ByVal HtmlName As String, fileSystem As CPFileSystemBaseClass, ByRef returnPathFilename As String) As Boolean
        'Public MustOverride Function ProcessInputFile(ByVal HtmlName As String, fileSystem As CPFileSystemBaseClass, uploadFilePath As String, ByRef returnFilename As String) As Boolean

        Public MustOverride Function Hidden(ByVal HtmlName As String, ByVal HtmlValue As String, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.Hidden
        Public MustOverride Function InputDate(ByVal HtmlName As String, Optional ByVal HtmlValue As String = "", Optional ByVal Width As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.InputDate
        Public MustOverride Function InputFile(ByVal HtmlName As String, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.InputFile
        Public MustOverride Function InputText(ByVal HtmlName As String, Optional ByVal HtmlValue As String = "", Optional ByVal Height As String = "", Optional ByVal Width As String = "", Optional ByVal IsPassword As Boolean = False, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.InputText
        Public MustOverride Function InputTextExpandable(ByVal HtmlName As String, Optional ByVal HtmlValue As String = "", Optional ByVal Rows As Integer = 0, Optional ByVal StyleWidth As String = "", Optional ByVal IsPassword As Boolean = False, Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.InputTextExpandable
        Public MustOverride Function SelectUser(ByVal HtmlName As String, ByVal HtmlValue As Integer, ByVal GroupId As Integer, Optional ByVal NoneCaption As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.SelectUser
        Public MustOverride Function Indent(ByVal SourceHtml As String, Optional ByVal TabCnt As Integer = 1) As String 'Implements BaseClasses.CPHtmlBaseClass.Indent
        Public MustOverride Function InputWysiwyg(ByVal HtmlName As String, Optional ByVal HtmlValue As String = "", Optional ByVal UserScope As BaseClasses.CPHtmlBaseClass.EditorUserScope = BaseClasses.CPHtmlBaseClass.EditorUserScope.CurrentUser, Optional ByVal ContentScope As BaseClasses.CPHtmlBaseClass.EditorContentScope = BaseClasses.CPHtmlBaseClass.EditorContentScope.Page, Optional ByVal Height As String = "", Optional ByVal Width As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String 'Implements BaseClasses.CPHtmlBaseClass.InputWysiwyg
        Public MustOverride Sub AddEvent(ByVal HtmlId As String, ByVal DOMEvent As String, ByVal JavaScript As String)
        Public MustOverride Function Button(ByVal HtmlName As String, Optional ByVal HtmlValue As String = "", Optional ByVal HtmlClass As String = "", Optional ByVal HtmlId As String = "") As String
        Public MustOverride Function adminHint(ByVal innerHtml As String) As String
    End Class

End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPRequestBaseClass
        'Public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        Public MustOverride ReadOnly Property Browser() As String 'Implements BaseClasses.CPRequestBaseClass.Browser
        Public MustOverride ReadOnly Property BrowserIsIE() As Boolean 'Implements BaseClasses.CPRequestBaseClass.BrowserIsIE
        Public MustOverride ReadOnly Property BrowserIsMac() As Boolean 'Implements BaseClasses.CPRequestBaseClass.BrowserIsMac
        Public MustOverride ReadOnly Property BrowserIsMobile() As Boolean 'Implements BaseClasses.CPRequestBaseClass.BrowserIsMobile
        Public MustOverride ReadOnly Property BrowserIsWindows() As Boolean 'Implements BaseClasses.CPRequestBaseClass.BrowserIsWindows
        Public MustOverride ReadOnly Property BrowserVersion() As String 'Implements BaseClasses.CPRequestBaseClass.BrowserVersion
        Public MustOverride Function Cookie(ByVal CookieName As String) As String 'Implements BaseClasses.CPRequestBaseClass.Cookie
        Public MustOverride ReadOnly Property CookieString() As String 'Implements BaseClasses.CPRequestBaseClass.CookieString
        Public MustOverride ReadOnly Property Form() As String 'Implements BaseClasses.CPRequestBaseClass.Form
        Public MustOverride ReadOnly Property FormAction() As String 'Implements BaseClasses.CPRequestBaseClass.FormAction
        Public MustOverride Function GetBoolean(ByVal RequestName As String) As Boolean 'Implements BaseClasses.CPRequestBaseClass.GetBoolean
        Public MustOverride Function GetDate(ByVal RequestName As String) As Date 'Implements BaseClasses.CPRequestBaseClass.GetDate
        Public MustOverride Function GetInteger(ByVal RequestName As String) As Integer 'Implements BaseClasses.CPRequestBaseClass.GetInteger
        Public MustOverride Function GetNumber(ByVal RequestName As String) As Double 'Implements BaseClasses.CPRequestBaseClass.GetNumber
        Public MustOverride Function GetText(ByVal RequestName As String) As String 'Implements BaseClasses.CPRequestBaseClass.GetText
        Public MustOverride ReadOnly Property Host() As String 'Implements BaseClasses.CPRequestBaseClass.Host
        Public MustOverride ReadOnly Property HTTPAccept() As String 'Implements BaseClasses.CPRequestBaseClass.HTTPAccept
        Public MustOverride ReadOnly Property HTTPAcceptCharset() As String 'Implements BaseClasses.CPRequestBaseClass.HTTPAcceptCharset
        Public MustOverride ReadOnly Property HTTPProfile() As String 'Implements BaseClasses.CPRequestBaseClass.HTTPProfile
        Public MustOverride ReadOnly Property HTTPXWapProfile() As String 'Implements BaseClasses.CPRequestBaseClass.HTTPXWapProfile
        Public MustOverride ReadOnly Property Language() As String 'Implements BaseClasses.CPRequestBaseClass.Language
        Public MustOverride ReadOnly Property Link() As String 'Implements BaseClasses.CPRequestBaseClass.Link
        Public MustOverride ReadOnly Property LinkForwardSource() As String 'Implements BaseClasses.CPRequestBaseClass.LinkForwardSource
        Public MustOverride ReadOnly Property LinkSource() As String 'Implements BaseClasses.CPRequestBaseClass.LinkSource
        Public MustOverride ReadOnly Property Page() As String 'Implements BaseClasses.CPRequestBaseClass.Page
        Public MustOverride ReadOnly Property Path() As String 'Implements BaseClasses.CPRequestBaseClass.Path
        Public MustOverride ReadOnly Property PathPage() As String 'Implements BaseClasses.CPRequestBaseClass.PathPage
        Public MustOverride ReadOnly Property Protocol() As String 'Implements BaseClasses.CPRequestBaseClass.Protocol
        Public MustOverride ReadOnly Property QueryString() As String 'Implements BaseClasses.CPRequestBaseClass.QueryString
        Public MustOverride ReadOnly Property Referer() As String 'Implements BaseClasses.CPRequestBaseClass.Referer
        Public MustOverride ReadOnly Property RemoteIP() As String 'Implements BaseClasses.CPRequestBaseClass.RemoteIP
        Public MustOverride ReadOnly Property Secure() As Boolean 'Implements BaseClasses.CPRequestBaseClass.Secure
        Public MustOverride Function OK(ByVal RequestName As String) As Boolean 'Implements BaseClasses.CPRequestBaseClass.OK
    End Class

End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPResponseBaseClass
        'Public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        Public MustOverride Property ContentType() As String
        Public MustOverride ReadOnly Property Cookies() As String
        Public MustOverride ReadOnly Property Header() As String
        Public MustOverride Sub Clear()
        Public MustOverride Sub Close()
        Public MustOverride Sub AddHeader(ByVal HeaderName As String, ByVal HeaderValue As String)
        Public MustOverride Sub Flush()
        Public MustOverride Sub Redirect(ByVal Link As String)
        Public MustOverride Sub SetBuffer(ByVal BufferOn As Boolean)
        Public MustOverride Sub SetStatus(ByVal status As String)
        Public MustOverride Sub SetTimeout(ByVal TimeoutSeconds As String)
        Public MustOverride Sub SetType(ByVal ContentType As String)
        Public MustOverride Sub SetCookie(ByVal CookieName As String, ByVal CookieValue As String)
        Public MustOverride Sub SetCookie(ByVal CookieName As String, ByVal CookieValue As String, ByVal DateExpires As Date)
        Public MustOverride Sub SetCookie(ByVal CookieName As String, ByVal CookieValue As String, ByVal DateExpires As Date, ByVal Domain As String)
        Public MustOverride Sub SetCookie(ByVal CookieName As String, ByVal CookieValue As String, ByVal DateExpires As Date, ByVal Domain As String, ByVal Path As String)
        Public MustOverride Sub SetCookie(ByVal CookieName As String, ByVal CookieValue As String, ByVal DateExpires As Date, ByVal Domain As String, ByVal Path As String, ByVal Secure As Boolean)
        Public MustOverride Sub Write(ByVal content As String)
        Public MustOverride ReadOnly Property isOpen() As Boolean
    End Class

End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    '
    '====================================================================================================
    ''' <summary>
    ''' Application settings and methods
    ''' </summary>
    Public MustInherit Class CPSiteBaseClass
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property Name() As String
        '
        '====================================================================================================
        '
        Public MustOverride Sub SetProperty(ByVal FieldName As String, ByVal FieldValue As String)
        '
        '====================================================================================================
        '
        Public MustOverride Function GetProperty(ByVal FieldName As String, Optional ByVal DefaultValue As String = "") As String
        '
        '====================================================================================================
        '
        Public MustOverride Function GetText(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As String
        '
        '====================================================================================================
        '
        Public MustOverride Function GetBoolean(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Boolean
        '
        '====================================================================================================
        '
        Public MustOverride Function GetDate(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Date
        '
        '====================================================================================================
        '
        Public MustOverride Function GetInteger(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Integer
        '
        '====================================================================================================
        '
        Public MustOverride Function GetNumber(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Double
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property MultiDomainMode() As Boolean
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property PhysicalFilePath() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property PhysicalInstallPath() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property PhysicalWWWPath() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property TrapErrors() As Boolean
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property AppPath() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property AppRootPath() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property DomainPrimary() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property Domain() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property DomainList() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property FilePath() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property PageDefault() As String
        '
        '====================================================================================================
        '
        Public MustOverride ReadOnly Property VirtualPath() As String
        '
        '====================================================================================================
        '
        Public MustOverride Function EncodeAppRootPath(ByVal Link As String) As String
        '
        '====================================================================================================
        '
        Public MustOverride Function IsTesting() As Boolean
        '
        '====================================================================================================
        '
        Public MustOverride Sub LogActivity(ByVal Message As String, ByVal UserID As Integer, ByVal OrganizationID As Integer)
        '
        '====================================================================================================
        '
        Public MustOverride Sub ErrorReport(ByVal Message As String)
        '
        '====================================================================================================
        '
        Public MustOverride Sub ErrorReport(ByVal Ex As System.Exception, Optional ByVal Message As String = "")
        '
        '====================================================================================================
        '
        ' 20151121 - not needed, removed to resolve compile issue with com compatibility
        'Public MustOverride Sub ErrorReport(ByVal Err As Microsoft.VisualBasic.ErrObject, Optional ByVal Message As String = "")
        '
        '====================================================================================================
        '
        Public MustOverride Sub RequestTask(ByVal Command As String, ByVal SQL As String, ByVal ExportName As String, ByVal Filename As String)
        '
        '====================================================================================================
        '
        Public MustOverride Sub TestPoint(ByVal Message As String)
        '
        '====================================================================================================
        '
        Public MustOverride Function LandingPageId(Optional ByVal DomainName As String = "") As Integer
        '
        '====================================================================================================
        '
        Public MustOverride Sub LogWarning(ByVal name As String, ByVal description As String, ByVal typeOfWarningKey As String, ByVal instanceKey As String)
        '
        '====================================================================================================
        '
        Public MustOverride Sub LogAlarm(ByVal cause As String)
        '
        '====================================================================================================
        '
        Public MustOverride Sub addLinkAlias(ByVal linkAlias As String, ByVal pageId As Integer, Optional ByVal queryStringSuffix As String = "")
        '
        '====================================================================================================
        '
        Public MustOverride Function ThrowEvent(ByVal eventNameIdOrGuid As String) As String
        '
        '====================================================================================================
        ''' <summary>
        ''' Returns a list of routes used to configure endpoints, always in Unix slash format without a leading slash
        ''' </summary>
        ''' <returns></returns>
        Public MustOverride Function getRouteDictionary() As Dictionary(Of String, routeClass)
        '
        '====================================================================================================
        '
        Public Class routeClass
            Public virtualRoute As String
            Public physicalRoute As String
            Public routeType As routeTypeEnum
            Public remoteMethodAddonId As Integer
            Public linkAliasId As Integer
            Public linkForwardId As Integer
        End Class
        '
        Public Enum routeTypeEnum
            admin
            remoteMethod
            linkAlias
            linkForward
        End Enum

    End Class

End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPUserBaseClass
        '
        ' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
        '
        Public MustOverride Function GetIdByLogin(ByVal Username As String, ByVal Password As String) As Integer 'Implements BaseClasses.CPUserBaseClass.GetIdByLogin
        Public MustOverride Sub Track()
        Public MustOverride Function IsAdvancedEditing(ByVal ContentName As String) As Boolean
        Public MustOverride ReadOnly Property IsAuthenticated() As Boolean
        Public MustOverride Function IsAuthoring(ByVal ContentName As String) As Boolean
        Public MustOverride Function IsEditing(ByVal ContentName As String) As Boolean
        Public MustOverride ReadOnly Property IsEditingAnything() As Boolean
        Public MustOverride ReadOnly Property IsGuest() As Boolean
        Public MustOverride Function IsQuickEditing(ByVal ContentName As String) As Boolean
        Public MustOverride ReadOnly Property IsRecognized() As Boolean
        Public MustOverride ReadOnly Property IsWorkflowRendering() As Boolean
        Public MustOverride ReadOnly Property IsNew() As Boolean
        '
        Public MustOverride ReadOnly Property IsAdmin() As Boolean
        Public MustOverride Function IsContentManager(Optional ByVal ContentName As String = "Page Content") As Boolean
        Public MustOverride ReadOnly Property IsDeveloper() As Boolean
        Public MustOverride Function IsInGroup(ByVal GroupName As String, Optional ByVal CheckUserID As Integer = 0) As Boolean
        Public MustOverride Function IsInGroupList(ByVal GroupIDList As String, Optional ByVal CheckUserID As Integer = 0) As Boolean
        Public MustOverride ReadOnly Property IsMember() As Boolean
        Public MustOverride Function Recognize(ByVal UserID As Integer) As Boolean
        '
        Public MustOverride Function Login(ByVal UsernameOrEmail As String, ByVal Password As String, Optional ByVal SetAutoLogin As Boolean = False) As Boolean
        Public MustOverride Function LoginByID(ByVal RecordID As String, Optional ByVal SetAutoLogin As Boolean = False) As Boolean
        Public MustOverride Function LoginByID(ByVal RecordID As Integer) As Boolean
        Public MustOverride Function LoginByID(ByVal RecordID As Integer, ByVal SetAutoLogin As Boolean) As Boolean
        Public MustOverride Function LoginIsOK(ByVal UsernameOrEmail As String, ByVal Password As String) As Boolean
        Public MustOverride Sub Logout()
        Public MustOverride Function IsNewLoginOK(ByVal Username As String, ByVal Password As String) As Boolean
        '
        Public MustOverride ReadOnly Property Language() As String
        Public MustOverride ReadOnly Property LanguageID() As Integer
        Public MustOverride ReadOnly Property Email() As String
        Public MustOverride ReadOnly Property Id() As Integer
        Public MustOverride ReadOnly Property Name() As String
        Public MustOverride ReadOnly Property OrganizationID() As Integer
        Public MustOverride ReadOnly Property Password() As String
        Public MustOverride ReadOnly Property Username() As String
        '
        Public MustOverride Function GetProperty(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "", Optional ByVal TargetVisitId As Integer = 0) As String
        Public MustOverride Function GetText(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As String
        Public MustOverride Function GetBoolean(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Boolean
        Public MustOverride Function GetDate(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Date
        Public MustOverride Function GetInteger(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Integer
        Public MustOverride Function GetNumber(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Double
        'Public MustOverride Function IsProperty(ByVal PropertyName As String) As Boolean
        Public MustOverride Sub SetProperty(ByVal PropertyName As String, ByVal Value As String, Optional ByVal TargetVisitId As Integer = 0)
    End Class


End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPUserErrorBaseClass
        'Public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        Public MustOverride Sub Add(ByVal Message As String) 'Implements BaseClasses.CPUserErrorBaseClass.Add
        Public MustOverride Function GetList() As String 'Implements BaseClasses.CPUserErrorBaseClass.GetList
        Public MustOverride Function OK() As Boolean 'Implements BaseClasses.CPUserErrorBaseClass.OK
    End Class

End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPUtilsBaseClass
        Enum addonContext
            ContextPage = 1
            ContextAdmin = 2
            ContextTemplate = 3
            ContextEmail = 4
            ContextRemoteMethodHtml = 5
            ContextOnNewVisit = 6
            ContextOnPageEnd = 7
            ContextOnPageStart = 8
            ContextEditor = 9
            ContextHelpUser = 10
            ContextHelpAdmin = 11
            ContextHelpDeveloper = 12
            ContextOnContentChange = 13
            ContextFilter = 14
            ContextSimple = 15
            ContextOnBodyStart = 16
            ContextOnBodyEnd = 17
            ContextRemoteMethodJson = 18
        End Enum
        '
        Public Class addonExecuteHostRecordContext
            Public contentName As String
            Public recordId As Integer
            Public fieldName As String
        End Class
        '
        Public Class addonExecuteContext
            ''' <summary>
            ''' This caption is used if the addon cannot be executed.
            ''' </summary>
            ''' <returns></returns>
            Public Property errorCaption As String
            ''' <summary>
            ''' select enumeration option the describes the environment in which the addon is being executed (in an email, on a page, as a remote method, etc)
            ''' </summary>
            ''' <returns></returns>
            Public Property addonType As addonContext = addonContext.ContextSimple
            ''' <summary>
            ''' Optional. If the addon is run from a page, it includes an instanceGuid which can be used by addon programming to locate date for this instance.
            ''' </summary>
            ''' <returns></returns>
            Public Property instanceGuid As String = ""
            ''' <summary>
            ''' Optional. Name value pairs added to the document environment during execution so they be read by addon programming during and after execution with cp.doc.getText(), etc.
            ''' </summary>
            ''' <returns></returns>
            Public Property instanceArguments As New Dictionary(Of String, String)
            ''' <summary>
            ''' Optional. If this addon is run automatically because it was included in content, this is the contentName, recordId and fieldName of the record that held that content.
            ''' </summary>
            ''' <returns></returns>
            Public Property hostRecord As New addonExecuteHostRecordContext()
            ''' <summary>
            ''' Optional. If included, this is the id value of a record in the Wrappers content and that wrapper will be added to the addon return result.
            ''' </summary>
            ''' <returns></returns>
            Public Property wrapperID As Integer = 0
            ''' <summary>
            ''' Optional. If included, the addon will be wrapped with a div and this will be the html Id value of the div. May be used to customize the resulting html styles.
            ''' </summary>
            ''' <returns></returns>
            Public Property cssContainerId As String = ""
            ''' <summary>
            ''' Optional. If included, the addon will be wrapped with a div and this will be the html class value of the div. May be used to customize the resulting html styles.
            ''' </summary>
            ''' <returns></returns>
            Public Property cssContainerClass As String = ""
            ''' <summary>
            ''' Optional. If included with personizationPeopleId, the addon will be run in a authentication context for this people record. If not included, the current documents authentication context is used. This may be used for cases like addons that send email where email content may include personalization.
            ''' </summary>
            ''' <returns></returns>
            Public Property personalizationPeopleId As Integer = 0
            ''' <summary>
            ''' Optional. If included with personizationPeopleId, the addon will be run in a authentication context for this people record. If not included, the current documents authentication context is used. This may be used for cases like addons that send email where email content may include personalization.
            ''' </summary>
            ''' <returns></returns>
            Public Property personalizationAuthenticated As Boolean = False
            ''' <summary>
            ''' Optional. If true, this addon is called because it was a dependancy, and can only be called once within a document.
            ''' </summary>
            ''' <returns></returns>
            Public Property isIncludeAddon As Boolean = False
            ''' <summary>
            ''' Optional. If set true, the addon being called will be delivered as ah html document, with head, body and html tags. This forces the addon's htmlDocument setting.
            ''' </summary>
            ''' <returns></returns>
            Public Property forceHtmlDocument As Boolean = False
        End Class

        Public MustOverride Function ConvertHTML2Text(ByVal Source As String) As String
        Public MustOverride Function ConvertText2HTML(ByVal Source As String) As String
        Public MustOverride Function CreateGuid() As String
        Public MustOverride Function DecodeUrl(ByVal Url As String) As String
        Public MustOverride Function EncodeContentForWeb(ByVal Source As String, Optional ByVal ContextContentName As String = "", Optional ByVal ContextRecordID As Integer = 0, Optional ByVal WrapperID As Integer = 0) As String
        Public MustOverride Function EncodeHtmlForWysiwygEditor(ByVal Source As String) As String
        Public MustOverride Function DecodeHtmlFromWysiwygEditor(ByVal Source As String) As String
        Public MustOverride Function DecodeHTML(ByVal Source As String) As String
        Public MustOverride Function EncodeHTML(ByVal Source As String) As String
        Public MustOverride Function EncodeUrl(ByVal Source As String) As String
        Public MustOverride Function GetPleaseWaitEnd() As String
        Public MustOverride Function GetPleaseWaitStart() As String
        Public MustOverride Sub IISReset()
        Public MustOverride Function EncodeInteger(ByVal Expression As Object) As Integer
        Public MustOverride Function EncodeNumber(ByVal Expression As Object) As Double
        Public MustOverride Function EncodeText(ByVal Expression As Object) As String
        Public MustOverride Function EncodeBoolean(ByVal Expression As Object) As Boolean
        Public MustOverride Function EncodeDate(ByVal Expression As Object) As Date
        Public MustOverride Function ExecuteAddon(ByVal IdGuidOrName As String) As String
        Public MustOverride Function ExecuteAddon(ByVal IdGuidOrName As String, ByVal WrapperId As Integer) As String
        Public MustOverride Function ExecuteAddon(ByVal IdGuidOrName As String, ByVal context As addonContext) As String
        Public MustOverride Function ExecuteAddonAsProcess(ByVal IdGuidOrName As String) As String
        <Obsolete("Deprecated, use AppendLog")> Public MustOverride Sub AppendLogFile(ByVal Text As String)
        Public MustOverride Sub AppendLog(ByVal pathFilename As String, ByVal logText As String)
        Public MustOverride Sub AppendLog(ByVal logText As String)
        Public MustOverride Function ConvertLinkToShortLink(ByVal URL As String, ByVal ServerHost As String, ByVal ServerVirtualPath As String) As String
        Public MustOverride Function ConvertShortLinkToLink(ByVal URL As String, ByVal PathPagePrefix As String) As String
        Public MustOverride Function DecodeGMTDate(ByVal GMTDate As String) As Date
        Public MustOverride Function DecodeResponseVariable(ByVal Source As String) As String
        Public MustOverride Function EncodeJavascript(ByVal Source As String) As String
        Public MustOverride Function EncodeQueryString(ByVal Source As String) As String
        Public MustOverride Function EncodeRequestVariable(ByVal Source As String) As String
        Public MustOverride Function GetArgument(ByVal Name As String, ByVal ArgumentString As String, Optional ByVal DefaultValue As String = "", Optional ByVal Delimiter As String = "") As String
        Public MustOverride Function GetFilename(ByVal PathFilename As String) As String
        Public MustOverride Function GetFirstNonZeroDate(ByVal Date0 As Date, ByVal Date1 As Date) As Date
        Public MustOverride Function GetFirstNonZeroInteger(ByVal Integer0 As Integer, ByVal Integer1 As Integer) As Integer
        Public MustOverride Function GetIntegerString(ByVal Value As Integer, ByVal DigitCount As Integer) As String
        Public MustOverride Function GetLine(ByVal Body As String) As String
        Public MustOverride Function GetListIndex(ByVal Item As String, ByVal ListOfItems As String) As Integer
        Public MustOverride Function GetProcessID() As Integer
        Public MustOverride Function GetRandomInteger() As Integer
        Public MustOverride Function IsInDelimitedString(ByVal DelimitedString As String, ByVal TestString As String, ByVal Delimiter As String) As Boolean
        Public MustOverride Function ModifyLinkQueryString(ByVal Link As String, ByVal QueryName As String, ByVal QueryValue As String, Optional ByVal AddIfMissing As Boolean = True) As String
        Public MustOverride Function ModifyQueryString(ByVal WorkingQuery As String, ByVal QueryName As String, ByVal QueryValue As String, Optional ByVal AddIfMissing As Boolean = True) As String
        Public MustOverride Sub ParseURL(ByVal SourceURL As String, ByRef Protocol As String, ByRef Host As String, ByRef Port As String, ByRef Path As String, ByRef Page As String, ByRef QueryString As String)
        Public MustOverride Sub SeparateURL(ByVal SourceURL As String, ByRef Protocol As String, ByRef Host As String, ByRef Path As String, ByRef Page As String, ByRef QueryString As String)
        Public MustOverride Function SplitDelimited(ByVal WordList As String, ByVal Delimiter As String) As Object
        Public MustOverride Sub Sleep(ByVal timeMSec As Integer)
        Public MustOverride Function hashMd5(ByVal source As String) As String
        Public MustOverride Function isGuid(ByVal guid As String) As Boolean
        Public MustOverride Sub Upgrade(ByVal isNewApp As Boolean)
        '
        '====================================================================================================
        ''' <summary>
        ''' Install an addon collection file asynchonously. The task is queued and the taskId is returned. Use cp.tasks.getTaskStatus to determine status
        ''' </summary>
        ''' <param name="privateFile"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionFromFile(privateFile As String) As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' Install all addon collections in a folder asynchonously. Optionally delete the folder. The task is queued and the taskId is returned. Use cp.tasks.getTaskStatus to determine status
        ''' </summary>
        ''' <param name="privateFolder"></param>
        ''' <param name="deleteFolderWhenDone"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionsFromFolder(privateFolder As String, deleteFolderWhenDone As Boolean) As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' Install all addon collections in a folder asynchonously. The task is queued and the taskId is returned. Use cp.tasks.getTaskStatus to determine status
        ''' </summary>
        ''' <param name="privateFolder"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionsFromFolder(privateFolder As String) As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' Install an addon collections from the collection library asynchonously. The task is queued and the taskId is returned. Use cp.tasks.getTaskStatus to determine status
        ''' </summary>
        ''' <param name="collectionGuid"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionFromLibrary(collectionGuid As String) As Integer
        '
        '====================================================================================================
        ''' <summary>
        ''' Install an addon collections from an endpoint asynchonously. The task is queued and the taskId is returned. Use cp.tasks.getTaskStatus to determine status
        ''' </summary>
        ''' <param name="link"></param>
        ''' <returns></returns>
        Public MustOverride Function installCollectionFromLink(link As String) As Integer
    End Class
End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPVisitBaseClass
        'Public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        Public MustOverride ReadOnly Property CookieSupport() As Boolean 'Implements BaseClasses.CPVisitBaseClass.CookieSupport
        Public MustOverride Function GetProperty(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "", Optional ByVal TargetVisitId As Integer = 0) As String 'Implements BaseClasses.CPVisitBaseClass.GetProperty
        Public MustOverride Function GetText(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As String
        Public MustOverride Function GetBoolean(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Boolean
        Public MustOverride Function GetDate(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Date
        Public MustOverride Function GetInteger(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Integer
        Public MustOverride Function GetNumber(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Double
        'Public MustOverride Function IsProperty(ByVal PropertyName As String) As Boolean
        Public MustOverride ReadOnly Property Id() As Integer 'Implements BaseClasses.CPVisitBaseClass.Id
        Public MustOverride ReadOnly Property LastTime() As Date 'Implements BaseClasses.CPVisitBaseClass.LastTime
        Public MustOverride ReadOnly Property LoginAttempts() As Integer 'Implements BaseClasses.CPVisitBaseClass.LoginAttempts
        Public MustOverride ReadOnly Property Name() As String 'Implements BaseClasses.CPVisitBaseClass.Name
        Public MustOverride ReadOnly Property Pages() As Integer 'Implements BaseClasses.CPVisitBaseClass.Pages
        Public MustOverride ReadOnly Property Referer() As String 'Implements BaseClasses.CPVisitBaseClass.Referer
        Public MustOverride Sub SetProperty(ByVal PropertyName As String, ByVal Value As String, Optional ByVal TargetVisitId As Integer = 0) 'Implements BaseClasses.CPVisitBaseClass.SetProperty
        Public MustOverride ReadOnly Property StartDateValue() As Integer 'Implements BaseClasses.CPVisitBaseClass.StartDateValue
        Public MustOverride ReadOnly Property StartTime() As Date 'Implements BaseClasses.CPVisitBaseClass.StartTime
    End Class

End Namespace

'
' documentation should be in a new project that inherits these classes. The class names should be the object names in the actual cp project
'
Namespace Contensive.BaseClasses
    Public MustInherit Class CPVisitorBaseClass
        'Public Sub New(ByVal cmcObj As Contensive.Processor.cpCoreClass, ByRef CPParent As CPBaseClass)
        Public MustOverride ReadOnly Property ForceBrowserMobile() As Boolean 'Implements BaseClasses.CPVisitorBaseClass.ForceBrowserMobile
        Public MustOverride Function GetProperty(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "", Optional ByVal TargetVisitorId As Integer = 0) As String 'Implements BaseClasses.CPVisitorBaseClass.GetProperty
        Public MustOverride Function GetText(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As String
        Public MustOverride Function GetBoolean(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Boolean
        Public MustOverride Function GetDate(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Date
        Public MustOverride Function GetInteger(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Integer
        Public MustOverride Function GetNumber(ByVal PropertyName As String, Optional ByVal DefaultValue As String = "") As Double
        'Public MustOverride Function IsProperty(ByVal PropertyName As String) As Boolean
        Public MustOverride ReadOnly Property Id() As Integer 'Implements BaseClasses.CPVisitorBaseClass.Id
        Public MustOverride ReadOnly Property IsNew() As Boolean 'Implements BaseClasses.CPVisitorBaseClass.IsNew
        Public MustOverride Sub SetProperty(ByVal PropertyName As String, ByVal Value As String, Optional ByVal TargetVisitorid As Integer = 0) 'Implements BaseClasses.CPVisitorBaseClass.SetProperty
        Public MustOverride ReadOnly Property UserId() As Integer 'Implements BaseClasses.CPVisitorBaseClass.UserId
    End Class

End Namespace










